// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AbsanteeContext))]
    [Migration("20250623161103_PendingChanges")]
    partial class PendingChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.DataModel.AssociationProjectCollaboratorDataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CollaboratorId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("AssociationProjCollab");
                });

            modelBuilder.Entity("Infrastructure.DataModel.CollaboratorDataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Collaborators");
                });

            modelBuilder.Entity("Infrastructure.DataModel.HolidayPeriodDataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("HolidayPlanDataModelId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("HolidayPlanDataModelId");

                    b.ToTable("HolidayPeriods");
                });

            modelBuilder.Entity("Infrastructure.DataModel.HolidayPlanDataModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CollaboratorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("HolidayPlans");
                });

            modelBuilder.Entity("Infrastructure.DataModel.AssociationProjectCollaboratorDataModel", b =>
                {
                    b.OwnsOne("Domain.Models.PeriodDate", "PeriodDate", b1 =>
                        {
                            b1.Property<Guid>("AssociationProjectCollaboratorDataModelId")
                                .HasColumnType("uuid");

                            b1.Property<DateOnly>("FinalDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("InitDate")
                                .HasColumnType("date");

                            b1.HasKey("AssociationProjectCollaboratorDataModelId");

                            b1.ToTable("AssociationProjCollab");

                            b1.WithOwner()
                                .HasForeignKey("AssociationProjectCollaboratorDataModelId");
                        });

                    b.Navigation("PeriodDate")
                        .IsRequired();
                });

            modelBuilder.Entity("Infrastructure.DataModel.CollaboratorDataModel", b =>
                {
                    b.OwnsOne("Domain.Models.PeriodDateTime", "PeriodDateTime", b1 =>
                        {
                            b1.Property<Guid>("CollaboratorDataModelId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime>("_finalDate")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("_initDate")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("CollaboratorDataModelId");

                            b1.ToTable("Collaborators");

                            b1.WithOwner()
                                .HasForeignKey("CollaboratorDataModelId");
                        });

                    b.Navigation("PeriodDateTime")
                        .IsRequired();
                });

            modelBuilder.Entity("Infrastructure.DataModel.HolidayPeriodDataModel", b =>
                {
                    b.HasOne("Infrastructure.DataModel.HolidayPlanDataModel", null)
                        .WithMany("HolidayPeriods")
                        .HasForeignKey("HolidayPlanDataModelId");

                    b.OwnsOne("Domain.Models.PeriodDate", "PeriodDate", b1 =>
                        {
                            b1.Property<Guid>("HolidayPeriodDataModelId")
                                .HasColumnType("uuid");

                            b1.Property<DateOnly>("FinalDate")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("InitDate")
                                .HasColumnType("date");

                            b1.HasKey("HolidayPeriodDataModelId");

                            b1.ToTable("HolidayPeriods");

                            b1.WithOwner()
                                .HasForeignKey("HolidayPeriodDataModelId");
                        });

                    b.Navigation("PeriodDate")
                        .IsRequired();
                });

            modelBuilder.Entity("Infrastructure.DataModel.HolidayPlanDataModel", b =>
                {
                    b.Navigation("HolidayPeriods");
                });
#pragma warning restore 612, 618
        }
    }
}
